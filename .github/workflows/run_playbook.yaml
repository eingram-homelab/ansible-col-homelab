name: Run Ansible new_build playbook

on:
  workflow_call:
    inputs:
      limit:
        description: 'Ansible limit for the playbook run'
        required: true
        type: string
      playbook:
        description: 'Playbook to run'
        required: true
        type: string
      extra_vars:
        description: 'Extra variables for the playbook run'
        required: false
        type: string
      ansible_user:
        description: 'Ansible user for the playbook run'
        required: true
        type: string

jobs:
  run_new_build_playbook:
    runs-on: arc-runners
    env:
      VAULT_ADDR: ${{ vars.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
      ansible_user: ${{ inputs.ansible_user }}
    steps:
      - name: Checkout Ansible Homelab Collection
        uses: actions/checkout@v4
        with:
          repository: eingram-homelab/ansible-col-homelab
          ref: develop
        
      - name: Checkout Ansible ETC Code
        uses: actions/checkout@v4
        with:
          repository: eingram-homelab/ansible-etc
          ref: develop
          path: ansible-etc

      - name: Setup Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.13'
          
      - name: Install Ansible and supporting packages
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install -y apt-transport-https
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y helm kubectl gcc krb5-config libkrb5-dev apt-transport-https ca-certificates curl gnupg
          python -m pip install --upgrade pip
          pip install ansible-core==2.18.5
          pip install -r ansible-etc/requirements.txt
          pip install passlib==1.7.4
          pip install --upgrade setuptools
          pip install --upgrade git+https://github.com/vmware/vsphere-automation-sdk-python.git
          
      - name: Install Ansible collections
        run: |
          ansible-galaxy collection install -r collections/requirements.yml

      - name: Create ansible ssh key
        run: |
          echo "${{ secrets.ANSIBLE_SSH_KEY }}" > ~/id_rsa
          sed -i 's/\r//' ~/id_rsa || echo "Unable to convert line endings"
          chmod 400 ~/id_rsa

      - name: Run playbook
        run: |
          export K8S_AUTH_KUBECONFIG=~/.kube/config
          ansible-playbook -i ansible-etc/inventory -e "${{ inputs.extra_vars }}" ${{ inputs.limit }} --key-file "~/id_rsa" playbooks/${{ inputs.playbook }}