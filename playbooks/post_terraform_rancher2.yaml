---
- name: Setup Kubernetes environment
  hosts: localhost
  gather_facts: false
  become: false

  tasks:
        
    - name: Create .kube folder
      ansible.builtin.file:
        path: ~/.kube
        state: directory
        mode: '0755'

    - name: Create kubeconfig
      ansible.builtin.copy:
        content: "{{ lookup('hashi_vault', 'secret=secret/kubernetes/' + cluster + ':kubeconfig' | default('')) }}"
        dest: ~/.kube/config
        mode: '0400'

    - name: Install kubernetes components
      ansible.builtin.include_role:
        name: eingram23.kubernetes.{{ component_item }}
      loop:
        - vsphere_csi
        - metallb
        - external_secrets
      loop_control:
        loop_var: component_item

    - name: Obtain cluster node names
      ansible.builtin.shell:
        cmd: "kubectl get nodes -o jsonpath='{.items[*].metadata.name}'"
      changed_when: false
      register: cluster_nodes

    - name: Obtain cluster control plane node names
      ansible.builtin.shell:
        cmd: "kubectl get nodes -l node-role.kubernetes.io/control-plane -o name | cut -d'/' -f2"
      changed_when: false
      register: cp_nodes

    - name: Create list from cluster node names
      ansible.builtin.set_fact:
        cluster_nodes_list: "{{ cluster_nodes.stdout.split() }}"

    - name: Create list from control plane names
      ansible.builtin.set_fact:
        control_plane_nodes_list: "{{ cp_nodes.stdout.split() }}"

    - name: Add host with cluster node names
      ansible.builtin.add_host:
        hostname: "{{ cluster_node_item }}"
        ansible_host: "{{ cluster_node_item }}.local.lan"
        ansible_user: ansible
        groups: temp_cluster_nodes
      loop: "{{ cluster_nodes_list }}"
      loop_control:
        loop_var: cluster_node_item

    - name: Add host with control plane node names
      ansible.builtin.add_host:
        hostname: "{{ cp_node_item }}"
        ansible_host: "{{ cp_node_item }}.local.lan"
        ansible_user: ansible
        groups: temp_cp_nodes
      loop: "{{ control_plane_nodes_list }}"
      loop_control:
        loop_var: cp_node_item

- name: Run new_build playbook on cluster nodes
  ansible.builtin.import_playbook: eingram23.homelab.new_build
  vars:
    hostvar: "temp_cluster_nodes"

- name: Run control plane tasks
  hosts: temp_cp_nodes
  gather_facts: false
  become: true

  tasks:

    - name: Create vsphere-csi config file to disable cloud controller
      ansible.builtin.copy:
        content: "disable-cloud-controller: true"
        dest: /etc/rancher/k3s/config.yaml.d/vsphere-csi.yaml
        mode: '0600'

- name: Run additional tasks on cluster nodes
  hosts: temp_cluster_nodes
  gather_facts: true
  become: true

  tasks:

    - name: Get VM ID
      delegate_to: localhost
      community.vmware.vmware_vm_info:
        hostname: vcsa-1.local.lan
        username: "{{ lookup('hashi_vault', 'secret/vsphere/vcsa:vsphere_username') }}"
        password: "{{ lookup('hashi_vault', 'secret/vsphere/vcsa:vsphere_password') }}"
        validate_certs: false
        vm_name: "{{ inventory_hostname }}"
      register: vm_info

    - name: Create vsphere-node config file to set provider-id
      ansible.builtin.copy:
        content: |
          kubelet-arg+:
            - provider-id=vsphere://{{ vm_info.virtual_machines[0].moid }}
        dest: /etc/rancher/k3s/config.yaml.d/vsphere-node.yaml
        mode: '0600'

    - name: Restart k3s
      ansible.builtin.systemd:
        name: k3s
        state: restarted
        enabled: true

        